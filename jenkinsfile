pipeline {
    agent any

    environment {
        DOCKER_TOKEN = credentials('docker-token')
        REGISTRY = 'docker.io'
        IMAGE_NAME = 'golanm/hw'
        SSH_KEY = credentials('my-ssh-key') 
    }

    stages {
        stage('Checkout Git Repo') {
            steps {
                git url: 'https://github.com/GolanMutzafi/pipelineproj.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:latest")
                }
            }
        }

        stage('Login to Docker Registry') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USER} --password-stdin ${REGISTRY}"
                    }
                }
            }
        }

        stage('Push Docker Image to Registry') {
            steps {
                script {
                    docker.push("${IMAGE_NAME}:latest")
                }
            }
        }

        stage('Run Docker Container on Linux Machine') {
            steps {
                sshagent(['my-ssh-key']) { 
                    script {
                        sh """
                        ssh -o StrictHostKeyChecking=no vboxuser@192.168.134.128 \
                        'docker run -d ${IMAGE_NAME}:latest'
                        """
                    }
                }
            }
        }

        stage('Test Application on Linux Machine') {
            steps {
                sshagent(['my-ssh-key']) {  
                    script {
                        sh """
                        ssh -o StrictHostKeyChecking=no vboxuser@192.168.134.128 \
                        'docker exec -it <container-id> bash -c "run tests here"'
                        """
                    }
                }
            }
        }
    }
}